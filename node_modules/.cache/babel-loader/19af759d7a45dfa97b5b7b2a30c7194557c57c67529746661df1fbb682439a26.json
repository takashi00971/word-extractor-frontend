{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// ステート変数\nconst[file,setFile]=useState(null);const[wordList,setWordList]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[generatingStory,setGeneratingStory]=useState(false);const[story,setStory]=useState('');const[theme,setTheme]=useState('');const[format,setFormat]=useState('通常の文章');// API URLの設定（RenderにデプロイしたバックエンドのURL）\nconst API_URL='https://word-extractor-api.onrender.com';// ファイル選択時の処理\nconst handleFileChange=e=>{if(e.target.files[0]){setFile(e.target.files[0]);}};// ファイルの内容を読み込む\nconst readFileContent=file=>{return new Promise((resolve,reject)=>{// テキストファイルの場合\nif(file.type==='text/plain'){const reader=new FileReader();reader.onload=e=>resolve(e.target.result);reader.onerror=reject;reader.readAsText(file);}// 画像ファイルの場合はbase64エンコード\nelse if(file.type.startsWith('image/')){const reader=new FileReader();reader.onload=e=>resolve(e.target.result);reader.onerror=reject;reader.readAsDataURL(file);}else{reject(new Error('サポートされていないファイル形式です。テキストまたは画像ファイルをアップロードしてください。'));}});};// フォーム送信時の処理\nconst handleSubmit=async e=>{e.preventDefault();if(!file){setError('ファイルを選択してください');return;}setIsLoading(true);setError(null);try{const content=await readFileContent(file);// バックエンドAPIにリクエスト\nconst response=await fetch(`${API_URL}/api/extract-words`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({content})});if(!response.ok){throw new Error('APIリクエストに失敗しました');}const data=await response.json();setWordList(data.words||[]);setStory('');// 文章もリセット\n}catch(err){console.error('Error:',err);setError(`エラーが発生しました: ${err.message}`);}finally{setIsLoading(false);}};// 文章生成関数\nconst generateStory=async()=>{if(wordList.length===0){setError('単語リストが空です。まずファイルを選択して単語を抽出してください。');return;}setGeneratingStory(true);setError(null);try{// バックエンドAPIにリクエスト\nconst response=await fetch(`${API_URL}/api/generate-story`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({wordList,theme:theme||'海外旅行',format:format})});if(!response.ok){throw new Error('APIリクエストに失敗しました');}const data=await response.json();setStory(data.story||'');}catch(err){console.error('Error generating story:',err);setError(`文章生成エラー: ${err.message}`);}finally{setGeneratingStory(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u82F1\\u5358\\u8A9E\\u30FB\\u82F1\\u719F\\u8A9E\\u62BD\\u51FA\\u30C4\\u30FC\\u30EB\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u30C6\\u30AD\\u30B9\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u307E\\u305F\\u306F\\u753B\\u50CF\\u30D5\\u30A1\\u30A4\\u30EB\\u304B\\u3089\\u82F1\\u5358\\u8A9E\\u30FB\\u82F1\\u719F\\u8A9E\\u3092\\u62BD\\u51FA\\u3057\\u307E\\u3059\"})]}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"upload-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",children:\"\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u9078\\u629E\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",type:\"file\",onChange:handleFileChange,accept:\".txt,image/*\"}),file&&/*#__PURE__*/_jsxs(\"p\",{className:\"file-name\",children:[\"\\u9078\\u629E\\u3055\\u308C\\u305F\\u30D5\\u30A1\\u30A4\\u30EB: \",file.name]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading||!file,children:isLoading?'処理中...':'単語を抽出する'})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),wordList.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"results\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\u62BD\\u51FA\\u3055\\u308C\\u305F\\u82F1\\u5358\\u8A9E\\u30FB\\u82F1\\u719F\\u8A9E (\",wordList.length,\"\\u500B)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"word-list-container\",children:wordList.map((word,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"word-item-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"word-item\",children:word})},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"story-generator\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[theme||'海外旅行',\"\\u3092\\u30C6\\u30FC\\u30DE\\u306B\\u3057\\u305F\",format,\"\\u5F62\\u5F0F\\u306E\\u6587\\u7AE0\\u751F\\u6210\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u3059\\u3079\\u3066\\u306E\\u5358\\u8A9E\\u3092\\u4F7F\\u7528\\u3057\\u305F\\u81EA\\u7136\\u306A\\u82F1\\u8A9E\\u306E\\u6587\\u7AE0\\u3092\\u751F\\u6210\\u3057\\u307E\\u3059\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"theme-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"theme-input\",children:\"\\u30C6\\u30FC\\u30DE:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"theme-input\",type:\"text\",value:theme,onChange:e=>setTheme(e.target.value),placeholder:\"\\u30C6\\u30FC\\u30DE\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",className:\"theme-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"format-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"format-input\",children:\"\\u5F62\\u5F0F:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"format-input\",value:format,onChange:e=>setFormat(e.target.value),className:\"format-input\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\\u901A\\u5E38\\u306E\\u6587\\u7AE0\",children:\"\\u901A\\u5E38\\u306E\\u6587\\u7AE0\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\u4F1A\\u8A71\\u5F62\\u5F0F\",children:\"\\u4F1A\\u8A71\\u5F62\\u5F0F\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\u30A4\\u30F3\\u30BF\\u30D3\\u30E5\\u30FC\\u5F62\\u5F0F\",children:\"\\u30A4\\u30F3\\u30BF\\u30D3\\u30E5\\u30FC\\u5F62\\u5F0F\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\u65E5\\u8A18\\u5F62\\u5F0F\",children:\"\\u65E5\\u8A18\\u5F62\\u5F0F\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\u624B\\u7D19\\u5F62\\u5F0F\",children:\"\\u624B\\u7D19\\u5F62\\u5F0F\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\\u30D6\\u30ED\\u30B0\\u8A18\\u4E8B\",children:\"\\u30D6\\u30ED\\u30B0\\u8A18\\u4E8B\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:generateStory,disabled:generatingStory||isLoading,className:\"generate-story-btn\",children:generatingStory?`文章生成中...`:`${format}形式の文章を生成する`}),story&&/*#__PURE__*/_jsx(\"div\",{className:\"story-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"story-content\",children:story.split('\\n').map((paragraph,i)=>paragraph.trim()?/*#__PURE__*/_jsx(\"p\",{children:paragraph},i):/*#__PURE__*/_jsx(\"div\",{className:\"empty-line\"},i))})})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","file","setFile","wordList","setWordList","isLoading","setIsLoading","error","setError","generatingStory","setGeneratingStory","story","setStory","theme","setTheme","format","setFormat","API_URL","handleFileChange","e","target","files","readFileContent","Promise","resolve","reject","type","reader","FileReader","onload","result","onerror","readAsText","startsWith","readAsDataURL","Error","handleSubmit","preventDefault","content","response","fetch","method","headers","body","JSON","stringify","ok","data","json","words","err","console","message","generateStory","length","className","children","onSubmit","htmlFor","id","onChange","accept","name","disabled","map","word","index","value","placeholder","onClick","split","paragraph","i","trim"],"sources":["C:/Users/b0922/word-extractor-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  // ステート変数\n  const [file, setFile] = useState(null);\n  const [wordList, setWordList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [generatingStory, setGeneratingStory] = useState(false);\n  const [story, setStory] = useState('');\n  const [theme, setTheme] = useState('');\n  const [format, setFormat] = useState('通常の文章');\n  \n  // API URLの設定（RenderにデプロイしたバックエンドのURL）\n  const API_URL = 'https://word-extractor-api.onrender.com';\n  \n  // ファイル選択時の処理\n  const handleFileChange = (e) => {\n    if (e.target.files[0]) {\n      setFile(e.target.files[0]);\n    }\n  };\n\n  // ファイルの内容を読み込む\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      // テキストファイルの場合\n      if (file.type === 'text/plain') {\n        const reader = new FileReader();\n        reader.onload = (e) => resolve(e.target.result);\n        reader.onerror = reject;\n        reader.readAsText(file);\n      } \n      // 画像ファイルの場合はbase64エンコード\n      else if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (e) => resolve(e.target.result);\n        reader.onerror = reject;\n        reader.readAsDataURL(file);\n      }\n      else {\n        reject(new Error('サポートされていないファイル形式です。テキストまたは画像ファイルをアップロードしてください。'));\n      }\n    });\n  };\n\n  // フォーム送信時の処理\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!file) {\n      setError('ファイルを選択してください');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const content = await readFileContent(file);\n      \n      // バックエンドAPIにリクエスト\n      const response = await fetch(`${API_URL}/api/extract-words`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ content }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('APIリクエストに失敗しました');\n      }\n      \n      const data = await response.json();\n      setWordList(data.words || []);\n      setStory(''); // 文章もリセット\n    } catch (err) {\n      console.error('Error:', err);\n      setError(`エラーが発生しました: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 文章生成関数\n  const generateStory = async () => {\n    if (wordList.length === 0) {\n      setError('単語リストが空です。まずファイルを選択して単語を抽出してください。');\n      return;\n    }\n    \n    setGeneratingStory(true);\n    setError(null);\n    \n    try {\n      // バックエンドAPIにリクエスト\n      const response = await fetch(`${API_URL}/api/generate-story`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          wordList,\n          theme: theme || '海外旅行',\n          format: format\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('APIリクエストに失敗しました');\n      }\n      \n      const data = await response.json();\n      setStory(data.story || '');\n    } catch (err) {\n      console.error('Error generating story:', err);\n      setError(`文章生成エラー: ${err.message}`);\n    } finally {\n      setGeneratingStory(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>英単語・英熟語抽出ツール</h1>\n        <p>テキストファイルまたは画像ファイルから英単語・英熟語を抽出します</p>\n      </header>\n      \n      <main>\n        <form onSubmit={handleSubmit} className=\"upload-form\">\n          <div className=\"file-input-container\">\n            <label htmlFor=\"file-upload\">ファイルを選択</label>\n            <input \n              id=\"file-upload\"\n              type=\"file\" \n              onChange={handleFileChange} \n              accept=\".txt,image/*\"\n            />\n            {file && <p className=\"file-name\">選択されたファイル: {file.name}</p>}\n          </div>\n          \n          <button type=\"submit\" disabled={isLoading || !file}>\n            {isLoading ? '処理中...' : '単語を抽出する'}\n          </button>\n        </form>\n        \n        {error && <p className=\"error\">{error}</p>}\n        \n        {wordList.length > 0 && (\n          <div className=\"results\">\n            <h2>抽出された英単語・英熟語 ({wordList.length}個)</h2>\n            \n            <div className=\"word-list-container\">\n              {wordList.map((word, index) => (\n                <div key={index} className=\"word-item-container\">\n                  <div className=\"word-item\">\n                    {word}\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"story-generator\">\n              <div className=\"section-header\">\n                <h3>{theme || '海外旅行'}をテーマにした{format}形式の文章生成</h3>\n                <p>すべての単語を使用した自然な英語の文章を生成します</p>\n              </div>\n              \n              <div className=\"theme-input-container\">\n                <label htmlFor=\"theme-input\">テーマ:</label>\n                <input\n                  id=\"theme-input\"\n                  type=\"text\"\n                  value={theme}\n                  onChange={(e) => setTheme(e.target.value)}\n                  placeholder=\"テーマを入力してください\"\n                  className=\"theme-input\"\n                />\n              </div>\n              \n              <div className=\"format-input-container\">\n                <label htmlFor=\"format-input\">形式:</label>\n                <select\n                  id=\"format-input\"\n                  value={format}\n                  onChange={(e) => setFormat(e.target.value)}\n                  className=\"format-input\"\n                >\n                  <option value=\"通常の文章\">通常の文章</option>\n                  <option value=\"会話形式\">会話形式</option>\n                  <option value=\"インタビュー形式\">インタビュー形式</option>\n                  <option value=\"日記形式\">日記形式</option>\n                  <option value=\"手紙形式\">手紙形式</option>\n                  <option value=\"ブログ記事\">ブログ記事</option>\n                </select>\n              </div>\n              \n              <button \n                onClick={generateStory} \n                disabled={generatingStory || isLoading} \n                className=\"generate-story-btn\"\n              >\n                {generatingStory \n                  ? `文章生成中...` \n                  : `${format}形式の文章を生成する`}\n              </button>\n              \n              {story && (\n                <div className=\"story-container\">\n                  <div className=\"story-content\">\n                    {story.split('\\n').map((paragraph, i) => \n                      paragraph.trim() ? <p key={i}>{paragraph}</p> : <div key={i} className=\"empty-line\"></div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}